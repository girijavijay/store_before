o: ActiveSupport::Cache::Entry	:@compressedF:@expires_in0:@created_atf1378806854.175519:@value{	I"length:EFi!I"digest;
F"%d8babd3d96450a6dc48834a30adf5b0bI"source;
FI"!(function() {
  window.AA.CheckboxToggler = AA.CheckboxToggler = (function() {
    function CheckboxToggler(options, container) {
      var defaults;
      this.options = options;
      this.container = container;
      defaults = {};
      this.options = $.extend({}, defaults, options);
      this._init();
      this._bind();
    }

    CheckboxToggler.prototype._init = function() {
      if (!this.container) {
        throw new Error('Container element not found');
      } else {
        this.$container = $(this.container);
      }
      if (!this.$container.find('.toggle_all').length) {
        throw new Error('"toggle all" checkbox not found');
      } else {
        this.toggle_all_checkbox = this.$container.find('.toggle_all');
      }
      return this.checkboxes = this.$container.find(':checkbox').not(this.toggle_all_checkbox);
    };

    CheckboxToggler.prototype._bind = function() {
      var _this = this;
      this.checkboxes.change(function(e) {
        return _this._didChangeCheckbox(e.target);
      });
      return this.toggle_all_checkbox.change(function() {
        return _this._didChangeToggleAllCheckbox();
      });
    };

    CheckboxToggler.prototype._didChangeCheckbox = function(checkbox) {
      switch (this.checkboxes.filter(':checked').length) {
        case this.checkboxes.length - 1:
          return this.toggle_all_checkbox.prop({
            checked: null
          });
        case this.checkboxes.length:
          return this.toggle_all_checkbox.prop({
            checked: true
          });
      }
    };

    CheckboxToggler.prototype._didChangeToggleAllCheckbox = function() {
      var setting,
        _this = this;
      setting = this.toggle_all_checkbox.prop('checked') ? true : null;
      return this.checkboxes.each(function(index, el) {
        $(el).prop({
          checked: setting
        });
        return _this._didChangeCheckbox(el);
      });
    };

    return CheckboxToggler;

  })();

  jQuery(function($) {
    return $.widget.bridge('checkboxToggler', AA.CheckboxToggler);
  });

}).call(this);
;
FI"_version;
F"%24fdcc162c5e3e862b98d166247dbaf9